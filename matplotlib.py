# -*- coding: utf-8 -*-
"""Matplotlib.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16owp6HmCDMPNjf8t8kXmPLvw-Eu26cqw

# **First**
"""

# Import packages
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

# Read csv
age = pd.read_csv('age_race_income2.csv')

# Set up 2x2 plot
fig, axes = plt.subplots(2, 2, figsize = (10, 8), sharey = True)
fig.subplots_adjust(hspace = 0.4, wspace = 0.2)
races = ['Asian', 'White', 'Hispanic', 'Black']

# Plot each race in a different subplot
for ax, race in zip(axes.flat, races):
  ax.bar(age['Age group'], age[race], color = 'skyblue')
  ax.set_title(race)
  ax.set_xticks(range(len(age['Age group'])))
  ax.set_xticklabels(age['Age group'])

  # Add grid lines on the ylabel
  ax.grid(True, axis = 'y', color='grey', linestyle = '-', linewidth = 0.7, alpha = 0.4)

  # Remove spines
  ax.spines['top'].set_visible(False)
  ax.spines['right'].set_visible(False)
  ax.spines['left'].set_visible(False)
  ax.spines['bottom'].set_visible(False)

  # Set ylabel tick labels with dollar signs
  y_ticks = ax.get_yticks()
  y_tick_labels = [f'${int(tick):,}' for tick in y_ticks]
  ax.set_yticklabels(y_tick_labels)

# Set x and y labels for the entire figure
fig.text(0.5, 0, 'age(years)', ha='center', fontsize=10)
fig.text(0, 0.5, 'median income (USD)', va='center', rotation='vertical', fontsize=10)

# Tighten layout for better spacing
plt.tight_layout()
plt.show()

"""# **Second**"""

# Import csv
state = pd.read_csv('/content/states_pop_change_2000-2010_full-1.csv')

# Sort the DataFrame by %Change in ascending order
state_sorted = state.sort_values(by = '%Change', ascending = True).reset_index()

# Create a color map for regions
color_map = {
    'West': '#E69F00',
    'South': '#57B4E9',
    'Midwest': '#019E73',
    'Northeast': '#F0E442'
}

# Create a horizonal bar chart
plt.figure(figsize = (8, 9))
plt.barh(state_sorted['State'], state_sorted['%Change'], color = state_sorted['Color'])
plt.xlabel('population growth, 2000 to 2010')
plt.grid(axis='x')
plt.xticks(range(0, 31, 10), [f'{x}%' for x in range(0, 31, 10)])

# Remove spines
plt.gca().spines['top'].set_visible(False)
plt.gca().spines['right'].set_visible(False)
plt.gca().spines['left'].set_visible(False)
plt.gca().spines['bottom'].set_visible(False)

# Add a legend
for region, color in color_map.items():
    plt.bar(0, 0, color = color, label = region)
legend = plt.legend(title='Region', loc='best', bbox_to_anchor = (0.625, 0.75))

# Remove spines of the legend
legend.get_frame().set_visible(False)

# Remove y-axis labels and ticks
plt.tick_params(axis = 'y', which = 'both', left = False, labelleft = False)

# Add colored state names
for i, (state, growth) in enumerate(zip(state_sorted['State'], state_sorted['%Change'])):
    plt.text(-0.5, i, state, ha = 'right', va='center', color = state_sorted['Color'][i], fontsize=10)

# Adjust position of Michigan's label
for i, value in enumerate(state_sorted['%Change']):
    if value < 0:  # Check if the value is negative
        plt.gca().texts[i].set_position((4, i))

# Show the chart
plt.tight_layout()
plt.show()